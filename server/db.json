{
  "post": [
    {
      "id": "1",
      "title": "웹페이지가 브라우저에 렌더링되는 과정-수정완료",
      "content": "내용1수정된 내용",
      "date": "2023-03-29"
    },
    {
      "id": "2",
      "title": "리액트 DOM",
      "content": "내용2",
      "date": "2023-03-29"
    },
    {
      "id": "3",
      "title": "자바스크립트 require와 import의 차이",
      "content": "내용2",
      "date": "2023-03-30"
    },
    {
      "id": "4",
      "title": "this의 동작원리와 용법 정리",
      "content": "수정된 내용",
      "date": "2023-04-03"
    },
    {
      "id": "5",
      "title": "리액트의 state와 props",
      "content": "내용2",
      "date": "2023-04-06"
    },
    {
      "id": "6",
      "title": "순수함수란? 불변성과 사이드 이펙트와 함께 공부하기.",
      "content": "순수함수란, 함수가 외부에 영향을 미치지 않고 인자로 전달된 값에만 의존하여 값을 계산하고 반환하는 함수입니다. 동일한 인자 값에 대해 항상 같은 결과를 반환하며, 함수 외부의 상태를 변경하지 않습니다. 순수함수와 불변성은 밀접한 관련이 있습니다. 불변성이란, 객체의 상태를 변경할 수 없는 속성을 가지는 객체를 말합니다. 이러한 객체는 생성 이후 변경할 수 없으므로 객체를 참조하는 다른 부분에서 예기치 않은 변경이 일어나지 않습니다. 따라서 순수함수에서는 인자로 전달된 객체를 변경하지 않고, 새로운 객체를 생성하여 반환하는 방식을 사용합니다. 또한 순수함수는 함수 외부의 상태를 변경하지 않아 사이드이팩트가 없습니다. 사이드이팩트란, 함수가 반환하는 값 이외에 함수 외부에 영향을 미치는 작업을 말합니다. 이러한 사이드이팩트를 없애기 위해서 함수 내부에서 외부 상태를 변경하는 작업을 하면 안됩니다. 즉, 함수 내부에서는 입력값만을 사용하여 계산하고, 결과값을 반환하는 방식을 사용해야 합니다. 이렇게함으로써 함수의 결과를 예측 가능하고 안정적으로 만들 수 있습니다.",
      "date": "2023-04-06"
    },
    {
      "id": "7",
      "title": "useRef가 필요한 상황",
      "content": "useRef가 필요한 상황은 크게 다섯가지가 있습니다. 폼요소에 자동으로 초점을 맞출 때, 이전 상태를 저장할 때, 애니메이션을 컨트롤할 때, DOM요소를 조작할 때, 그리고 외부라이브러리와 상호작용할 때입니다. 다음 시간에 좀 더 자세히 알아보겠습니다.  추가테스트",
      "date": "2023-04-06"
    },
    {
      "id": "8",
      "title": "리액트의 state와 props",
      "content": "\n**object타입을 명시적으로 정해주는 방법**\n\n\n```\nlet a: number[] = [1, 2];\n\nlet b: string[] = [\"hi\"];\n\nlet c: boolean[] = [true];\n```\n\n콜론이용, 타입적어주면 됨\n\n그리고 ts가 타입을 추론하게",
      "date": "2023-04-06"
    },
    {
      "title": "마크다운으로 작성이 가능합니다.",
      "content": "다음을 참고하여 마크다운으로 게시글을 작성하시면 됩니다.\n\n코드를 입력하실 수 있으며, \n\n```\nfunction Example() {\n\tconst [a, setA] = useState(true);\n\tuseEffect(() => {\n\t\tconst timer = setTimeout(() => setA(false), 3000);\n\t\treturn () => {\n\t\t\tclearTimeout(timer);\n\t\t//타이머 제거하는 함수\n\t\t};\n\t}, []);\n\treturn <div>{a && <Popup>3초 내 구매하면 완쁠완 혜택!</Popup>}</div>;\n}\n```\n\n**볼드체** __볼드체__\n\n*이탤릭체*  _이탤릭체_\n\n순서가 있는 리스트는 1. 항목, 순서가 없는 리스트는 - 항목 혹은 * 항목\n1. 일\n2. 이\n3. 삼\n4. 사\n5. 오\n\n\n- 순서가 없는\n- 항목은 - 대쉬를 이용해 표현합니다.\n\n",
      "date": "2023-04-09",
      "id": "9"
    }
  ]
}